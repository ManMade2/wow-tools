[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/wow_tools"]

[project]
name = "ManMade2.WowTools"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
keywords = []
authors = [{ name = "ManMade2", email = "madskris@proton.me" }]
classifiers = [
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "ManMade2.Commander==1.0.4",
  "ManMade2.BelialDB==1.0.2",
  "tk",
  "python-json-logger",
  "pydantic",
]

[project.urls]
Documentation = "https://github.com/ManMade2/wow-tools#readme"
Issues = "https://github.com/ManMade2/wow-tools/issues"
Source = "https://github.com/ManMade2/wow-tools"

[tool.hatch.version]
path = "src/wow_tools/__about__.py"

[tool.hatch.envs.python]
python = "3.13"

[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/wow_tools tests}"

[tool.coverage.run]
source_pkgs = ["wow_tools", "tests"]
branch = true
parallel = true
omit = ["src/wow_tools/__about__.py"]

[tool.coverage.paths]
wow_tools = ["src/wow_tools", "*/wow-tools/src/wow_tools"]
tests = ["tests", "*/wow-tools/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
